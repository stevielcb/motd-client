name: Auto Release

on:
  push:
    branches: [ main ]

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
        cache: true
        
    - name: Install dependencies
      run: go mod download

    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/motd-client-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -o dist/motd-client-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -o dist/motd-client-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -o dist/motd-client-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -o dist/motd-client-windows-amd64.exe .
        GOOS=windows GOARCH=arm64 go build -o dist/motd-client-windows-arm64.exe .
        
    - name: Generate version
      id: version
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $LATEST_TAG"
        
        # Extract version numbers
        MAJOR=$(echo $LATEST_TAG | sed 's/v\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\1/')
        MINOR=$(echo $LATEST_TAG | sed 's/v\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\2/')
        PATCH=$(echo $LATEST_TAG | sed 's/v\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\3/')
        
        # Increment patch version
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
        
        echo "New version: $NEW_VERSION"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        
    - name: Create tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag ${{ steps.version.outputs.version }}
        git push origin ${{ steps.version.outputs.version }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        files: |
          dist/motd-client-linux-amd64
          dist/motd-client-linux-arm64
          dist/motd-client-darwin-amd64
          dist/motd-client-darwin-arm64
          dist/motd-client-windows-amd64.exe
          dist/motd-client-windows-arm64.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 