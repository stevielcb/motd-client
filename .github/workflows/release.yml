name: Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true
        
    - name: Install dependencies
      run: go mod download

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o dist/motd-client-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -o dist/motd-client-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -o dist/motd-client-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -o dist/motd-client-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -o dist/motd-client-windows-amd64.exe .
        GOOS=windows GOARCH=arm64 go build -o dist/motd-client-windows-arm64.exe .
        
    - name: Create dist directory
      run: mkdir -p dist
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: motd-client-binaries
        path: dist/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: motd-client-binaries
        path: dist/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/motd-client-linux-amd64
          dist/motd-client-linux-arm64
          dist/motd-client-darwin-amd64
          dist/motd-client-darwin-arm64
          dist/motd-client-windows-amd64.exe
          dist/motd-client-windows-arm64.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 